<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/angular/angular-animate.js"></script>
    <script src="/js/angular/angular-cookie.js"></script>
    <script src="/js/angular/angular-route.js"></script>
    <script src="/js/angular/angular-ui-router.min.js"></script>
    <script src="/js/angular/angular.min.js"></script>
    <script src="/js/angular/loading-bar.min.js"></script>
    <script src="/js/angular/ng-token-auth.min.js"></script>
    <script src="/js/angular/ngStorage.min.js"></script>
    <script src="/js/bootstrap-select.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/classie.js"></script>
    <script src="/js/easing.js"></script>
    <script src="/js/easyResponsiveTabs.js"></script>
    <script src="/js/factories/httpHandler.js"></script>
    <script src="/js/filedrag.js"></script>
    <script src="/js/init.js"></script>
    <script src="/js/jquery-1.10.2.js"></script>
    <script src="/js/jquery-ui.js"></script>
    <script src="/js/jquery.fileupload.js"></script>
    <script src="/js/jquery.flexisel.js"></script>
    <script src="/js/jquery.flexslider.js"></script>
    <script src="/js/jquery.knob.js"></script>
    <script src="/js/jquery.leanModal.min.js"></script>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery.ui.widget.js"></script>
    <script src="/js/jquery.uls.core.js"></script>
    <script src="/js/jquery.uls.data.js"></script>
    <script src="/js/jquery.uls.data.utils.js"></script>
    <script src="/js/jquery.uls.languagefilter.js"></script>
    <script src="/js/jquery.uls.lcd.js"></script>
    <script src="/js/jquery.uls.regionfilter.js"></script>
    <script src="/js/main.js"></script>
    <script src="/js/move-top.js"></script>
    <script src="/js/responsiveslides.min.js"></script>
    <script src="/js/routes.js"></script>
    <script src="/js/script.js"></script>
    <script src="/js/services/auth.js"></script>
    <script src="/js/tabs.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
